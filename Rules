#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
  # Remove non-NEPs from /neps/*/
  items.delete_if do |i|
    parts = i.identifier.scan(/[^\/]+/)
    parts.size == 2 && parts[0] == 'neps' && parts[1] !~ %r{^NEP-}
  end

  # Remove : from neps
  items.each do |i|
    i.identifier.sub!(':', '')
  end

  # Remove /neps/ prefix
  items.each do |i|
    i.identifier.sub!(/^\/neps/, '')
  end

  # Assign number and title
  neps.each do |nep|
    nep[:number] = nep.identifier[/\d+/].to_i
    nep[:title]  = nep.identifier.match(/\d+-(.*)\/$/)[1].gsub('-', ' ')
  end
end

compile '/stylesheet/' do
  # don’t filter or layout
end

compile '/' do
  filter :erb
  layout 'default'
  filter :relativize_paths, :type => :html
end

compile '/NEP-*' do
  filter :redcarpet, :renderer => ColorizedHTMLRenderer, :options => { :fenced_code_blocks => true }
  layout 'detail-box'
  layout 'default'
  filter :relativize_paths, :type => :html
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    layout 'default'
  end
end

route '/stylesheet/' do
  '/style.css'
end

route '/static/*' do
  '/' + item[:filename]
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
